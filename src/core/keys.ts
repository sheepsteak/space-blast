export type Keys = { [key in KeyCode]?: boolean };

export type KeyCode =
	| "Backquote"
	| "Backslash"
	| "BracketLeft"
	| "BracketRight"
	| "Comma"
	| "Digit0"
	| "Digit1"
	| "Digit2"
	| "Digit3"
	| "Digit4"
	| "Digit5"
	| "Digit6"
	| "Digit7"
	| "Digit8"
	| "Digit9"
	| "Equal"
	| "IntlBackslash"
	| "IntlRo"
	| "IntlYen"
	| "KeyA"
	| "KeyB"
	| "KeyC"
	| "KeyD"
	| "KeyE"
	| "KeyF"
	| "KeyG"
	| "KeyH"
	| "KeyI"
	| "KeyJ"
	| "KeyK"
	| "KeyL"
	| "KeyM"
	| "KeyN"
	| "KeyO"
	| "KeyP"
	| "KeyQ"
	| "KeyR"
	| "KeyS"
	| "KeyT"
	| "KeyU"
	| "KeyV"
	| "KeyW"
	| "KeyX"
	| "KeyY"
	| "KeyZ"
	| "Minus"
	| "Period"
	| "Quote"
	| "Semicolon"
	| "Slash"
	| "AltLeft"
	| "AltRight"
	| "Backspace"
	| "CapsLock"
	| "ContextMenu"
	| "ControlLeft"
	| "ControlRight"
	| "Enter"
	| "MetaLeft"
	| "MetaRight"
	| "ShiftLeft"
	| "ShiftRight"
	| "Space"
	| "Tab"
	| "Delete"
	| "End"
	| "Help"
	| "Home"
	| "Insert"
	| "PageDown"
	| "PageUp"
	| "ArrowDown"
	| "ArrowLeft"
	| "ArrowRight"
	| "ArrowUp"
	| "NumLock"
	| "Numpad0"
	| "Numpad1"
	| "Numpad2"
	| "Numpad3"
	| "Numpad4"
	| "Numpad5"
	| "Numpad6"
	| "Numpad7"
	| "Numpad8"
	| "Numpad9"
	| "NumpadAdd"
	| "NumpadBackspace"
	| "NumpadClear"
	| "NumpadClearEntry"
	| "NumpadComma"
	| "NumpadDecimal"
	| "NumpadDivide"
	| "NumpadEnter"
	| "NumpadEqual"
	| "NumpadHash"
	| "NumpadMemoryAdd"
	| "NumpadMemoryClear"
	| "NumpadMemoryRecall"
	| "NumpadMemoryStore"
	| "NumpadMemorySubtract"
	| "NumpadMultiply"
	| "NumpadParenLeft"
	| "NumpadParenRight"
	| "NumpadStar"
	| "NumpadSubtract"
	| "Escape"
	| "F1"
	| "F2"
	| "F3"
	| "F4"
	| "F5"
	| "F6"
	| "F7"
	| "F8"
	| "F9"
	| "F10"
	| "F11"
	| "F12"
	| "Fn"
	| "FnLock"
	| "PrintScreen"
	| "ScrollLock"
	| "Pause";

export type KeyboardListener = {
	isPressed: (key: KeyCode) => boolean;
};

export const createKeyboardListener = (): KeyboardListener => {
	const keys: Keys = {};

	const keydown = (e: KeyboardEvent) => {
		keys[e.code as KeyCode] = true;
	};

	const keyup = (e: KeyboardEvent) => {
		keys[e.code as KeyCode] = false;
	};

	window.addEventListener("keydown", keydown);
	window.addEventListener("keyup", keyup);

	return {
		isPressed: (key) => !!keys[key],
	};
};
